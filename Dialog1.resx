<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>